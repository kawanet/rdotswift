function KEYWORD(v) { exports[v]=1; }
KEYWORD("associatedtype");
KEYWORD("class");
KEYWORD("deinit");
KEYWORD("enum");
KEYWORD("extension");
KEYWORD("func");
KEYWORD("import");
KEYWORD("init");
KEYWORD("inout");
KEYWORD("let");
KEYWORD("operator");
KEYWORD("precedencegroup");
KEYWORD("protocol");
KEYWORD("struct");
KEYWORD("subscript");
KEYWORD("typealias");
KEYWORD("var");
KEYWORD("fileprivate");
KEYWORD("internal");
KEYWORD("private");
KEYWORD("public");
KEYWORD("static");
KEYWORD("undef");
KEYWORD("sil");
KEYWORD("sil_stage");
KEYWORD("sil_property");
KEYWORD("sil_vtable");
KEYWORD("sil_global");
KEYWORD("sil_witness_table");
KEYWORD("sil_default_witness_table");
KEYWORD("sil_coverage_map");
KEYWORD("sil_scope");
KEYWORD("defer");
KEYWORD("if");
KEYWORD("guard");
KEYWORD("do");
KEYWORD("repeat");
KEYWORD("else");
KEYWORD("for");
KEYWORD("in");
KEYWORD("while");
KEYWORD("return");
KEYWORD("break");
KEYWORD("continue");
KEYWORD("fallthrough");
KEYWORD("switch");
KEYWORD("case");
KEYWORD("default");
KEYWORD("where");
KEYWORD("catch");
KEYWORD("throw");
KEYWORD("as");
KEYWORD("Any");
KEYWORD("false");
KEYWORD("is");
KEYWORD("nil");
KEYWORD("rethrows");
KEYWORD("super");
KEYWORD("self");
KEYWORD("Self");
KEYWORD("true");
KEYWORD("try");
KEYWORD("throws");
KEYWORD("__FILE__");
KEYWORD("__LINE__");
KEYWORD("__COLUMN__");
KEYWORD("__FUNCTION__");
KEYWORD("__DSO_HANDLE__");
KEYWORD("_");
KEYWORD("keyPath");
KEYWORD("line");
KEYWORD("selector");
KEYWORD("file");
KEYWORD("column");
KEYWORD("function");
KEYWORD("dsohandle");
KEYWORD("sourceLocation");
KEYWORD("warning");
KEYWORD("error");
KEYWORD("if");
KEYWORD("else");
KEYWORD("elseif");
KEYWORD("endif");
